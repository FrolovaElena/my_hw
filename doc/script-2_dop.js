/*
  Напишите цикл, который предлагает, через prompt, ввести число больше 100. 
  
  Если посетитель ввёл другое число – попросить ввести ещё раз, и так далее.

  Цикл должен спрашивать число пока либо посетитель не введёт число, большее 100, 
  либо не нажмёт кнопку Cancel.
  
  Предполагается, что посетитель вводит только числа, обрабатывать невалидный ввод 
  вроде строк 'qweqwe' в этой задаче необязательно.
  
  PS: используйте цикл do...while

let input;

input = prompt('enter numder more than 100');
if(!input) {
    alert('error!');
} else if (Number.isNaN(Number(input))) {
    alert('not a number!');
} else {
    while (Number(input) < 100) {
      input = prompt('enter another number');
    } 
 console.log('enter : ' + input);
}
*/

/*
  Напишите скрипт, который выводит через console.log все 
  числа от min до max, с двумя исключениями: 
    
    - Для чисел, нацело делящихся на 3, вместо числа выводится строка 'Fizz'
    
    - Для чисел, нацело делящихся на 5, но не на 3, вместо числа выводится строка 'Buzz'
    
  PS: используйте цикл for

const min = 1;
const max = 100;

let number;

for (number = min; number >= min && number <= max; number += 1) {
    if (number % 3 === 0) {
        console.log('fizz');
    } else if (number % 5 === 0 && number % 3 !== 0) {
        console.log('buzz');
    } else {
        console.log(number);
    }
}*/

/*
  Напишите скрипт, который выбирает из массива numbers 
  все числа, которые больше чем значение переменной num, 
  записывая эти числа в массив newArray.
      
  В результате в массиве newArray будут все подходяшие числа.
      
  PS: используйте цикл for или for...of и оператор ветвления if
*/
/*
const numbers = [1, 3, 17, 5, 9, 14, 8, 14, 34, 18, 26];
const num = 10;
const newArray = [];
let max = numbers.length;

for (let i=0; i < max; i += 1) {
    if (numbers[i] > num) {
        newArray.push(numbers[i]);
    }
}
  console.log(newArray);


let number;

for (number of numbers) {
    if (number > num) {
        newArray.push(number);
    }
}
  console.log(newArray);  
*/

/*
  Напишите скрипт, который проверяет произвольную строку 
  в переменной string и находит в ней самое длинное слово,
  записывая его в переменную longestWord.


const string = "May the force be with you";
let arr = string.split(' ');
let longestWord = arr[0];
let max = arr.length; 
for (let i = 1; i < max; i += 1) {
  if (arr[i].length > longestWord.length) { (сравниваем текущее число с самым большим)
    longestWord = arr[i];
  }
} console.log(longestWord); // 'force
*/

/*
  Напишите скрипт который:
  
  - Запрашивает по очереди числа при помощи prompt и сохраняет их в массиве.
    Используйте do...while.
  - Проверять что пользователь ввел не число не обязательно
  - Заканчивает запрашивать числа как только пользователь нажмёт Cancel.
  - После того как ввод был завершен, если массив не пустой, 
    скрипт выводит сумму всех значений массива: "Сумма: <сумма всех значений в массиве>"
    Используйте цикл for...of


let userChoise;
let arrNumbers = [];
let number;
let result = 0;
do {
    userChoise = prompt('Введите произвольное число');
    if(Number.isNaN(Number(userChoise))) {
      alert('not a number'); 
      break;
    }
    arrNumbers.push(Number(userChoise));
} while (userChoise !== null);
console.log(arrNumbers);

for(let i = 0; i < arrNumbers.length; i += 1) {
    result += arrNumbers[i];
}
console.log(result);
*/

/*
  ***ЗАДАНИЕ ПОВЫШЕНОЙ СЛОЖНОСТИ***
  
  Создайте игру угадай число.
  
  Есть массив чисел numbers, содержащий "верные" числа.
  Числа в массиве всегда идут по возрастанию, 1-5, 20-40, 2-100 и т.п.
  
  Просим пользователя ввести цифру от самого маленького,
  до самого большого элемента массива. Эти значения необходимо
  сохранить в переменные min и max. Учтите что массив произвольный,
  но элементы всегда идут по возрастанию.
  
  Пусть prompt говорит "Введите цифру между x и y", где x и y 
  соотвественно самый маленький и самый большой элемент массива.
  
  Но пользователь может ввести что угодно, необходимо проверить 
  что было введено. Преобразовать input в числовой тип и проверить 
  число ли это.
  
    - Если не число - выводим alert с сообщением о том, что было 
      введено не число.
    - Если число - проверить содержит ли в себе массив numbers это число.
    - Если содержит - выводим alert с сообщение.
    - Есл не содержит - выводим alert с сообщением 'Сожалеем, Вы не угадали!'.


const numbers = [12, 15, 25, 37, 41, 58];
const min = 12;
const max = 58;
let userInput = prompt(`Введите цифру между ${min} и ${max}`);
if (!userInput) {
    alert('Попробуйте позже');
} else if (Number.isNaN(Number(userInput))) {
    alert('Вы ввели не число!');
} else {
   if (numbers.includes(Number(userInput))) {
       alert('Поздравляем, Вы угадали!!!');
   } else {
       alert('Сожалеем, Вы не угадали!');
   }
}
*/

/*
Есть массив паролей зарегистрированных пользователей passwords.
При посещении страницы, необходимо попросить пользователя ввести свой пароль, после чего проверить содержит ли массив passwords пароль введенный пользователем.
Пароль можно ввести не верно всего n раз, кол-во хранится в переменной attempts. Подсказка: используйте цикл do...while.
Если был введен пароль который есть в массиве passwords, вывести alert с текстом 'Добро пожаловать!' и прекратить спрашивать пароль в цикле.
Если был введен не существующий пароль, отнять от лимита попыток единицу, вывести alert с текстом 'Неверный пароль, у вас осталось n попыток', где n это оставшийся лимит.
После того как пользователь закрыл alert, запросить пароль снова.
Продолжать запрашивать пароль до тех пор, пока пользователь не введет существующий пароль, не кончатся попытки или пока пользователь не нажмет Cancel в prompt.
Если закончились попытки, вывести alert с текстом 'У вас закончились попытки, аккаунт заблокирован!'
Если пользователь нажмет Cancel, прекратить выполнение цикла.
*/

const passwords = ['qwerty', '111qwe', '123123', 'r4nd0mp4zzw0rd'];
let attempts = 3;
let userInput;

do {
  userInput = prompt('Введите пароль!');
  if (passwords.includes(userInput)) {
    alert('Добро пожаловать!');
    break;
  } else if (!userInput) {
    alert('Отменено пользователем!');
    break;
  } else {
    attempts -= 1;
    console.log(attempts);
    alert(`Неверный пароль, у вас осталось ${attempts} попыток`);
    if (attempts === 0) {
      alert('У вас закончились попытки, аккаунт заблокирован!');
    }
  }
} while (attempts > 0);
